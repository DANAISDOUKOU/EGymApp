@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "dipl.danai.app.model.Athletes",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_95350649 { 
   	label=danai
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1386287572 { 
   	label=app
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AthelteController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AthelteController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   athleteService: AthleteService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classOfScheduleService: ClassOfScheduleService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classRatingService: ClassRatingService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymService: GymService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ athletePage(model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ rateClass(classOfScheduleId: Long, gymId: Long, instructorRating: double, accuracyRating: double, crowdingRating: double, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ seeAllGyms(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ seeGymsThatIamMember(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ viewAttendanceHistory(model: Model, authentication: Authentication, gymId: Long): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Athletes1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Athletes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   City: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   athlete_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   athlete_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   athlete_surname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classes: List&lt;ClassOfSchedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   contact: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gyms: Set&lt;Gym&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phoneNumber: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AuthController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AuthController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   athleteService: AthleteService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dataSource: DataSource [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   emailService: EmailService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymService: GymService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructorService: InstructorService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   passwordEncoder: PasswordEncoder [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   query: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   query2: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   query3: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   userService: UserService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ forgotPassword(email: String, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProfileAddress(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProfileCity(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProfileName(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProfilePhoneNumber(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProfileSurname(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ login(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ register(model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerUser(model: Model, user: User, bindingResult: BindingResult): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetPassword(resetToken: String, newPassword: String, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ setProfileAddress(authentication: Authentication, model: Model, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ setProfileCity(authentication: Authentication, model: Model, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ setProfileName(authentication: Authentication, model: Model, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ setProfilePhoneNumber(authentication: Authentication, model: Model, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ setProfileSurname(authentication: Authentication, model: Model, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showForgotPasswordPage(model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showProfile(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showResetPasswordPage(resetToken: String, model: Model): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassOccurrence1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassOccurrence</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   canceled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classOfSchedule: ClassOfSchedule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   occurenceId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schedule: Schedule [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassOfSchedule1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassOfSchedule</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classOfScheduleId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructor: Instructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   is_canceled: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   participants: List&lt;Athletes&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   room: Room [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schedules: List&lt;Schedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time_end: Time [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time_start: Time [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   workout: Workout [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassRating1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassRating</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   accuracyRating: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   athlete: Athletes [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classOfSchedule: ClassOfSchedule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   class_rating_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   crowdingRating: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym: Gym [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructor: Instructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructorRating: double [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Gym1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Gym</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   City: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   averageRating: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymInstructors: Set&lt;Instructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymMembers: Set&lt;Athletes&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymMemberships: List&lt;MembershipType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymSchedules: Collection&lt;Schedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gymWorkouts: List&lt;Workout&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym_surname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phoneNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ratingss: List&lt;GymRating&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rooms: List&lt;Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   totalRatings: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GymController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GymController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   athleteService: AthleteService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   classOfScheduleService: ClassOfScheduleService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gymRatingService: GymRatingService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gymService: GymService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorService: InstructorService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   membershipService: MembershipService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scheduleService: ScheduleService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   workoutService: WorkoutService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ MembershipTypes(model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructorToGym(selectedInstructors: List&lt;Long&gt;, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWorkoutsToGym(selectedWorkouts: List&lt;Long&gt;, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createGymRoom(model: Model, authentication: Authentication, room: Room, bindingResult: BindingResult): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMembers(model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ gymFitnessProgram(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ gymPage(authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ gymRoom(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ instructorsGym(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ rateGym(gymId: Long, rating: int, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchGyms(name: String, address: String, workoutType: String, bestRating: Integer, city: String, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectMembership(request: HttpServletRequest, authentication: Authentication, membershipId: Long, gymId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showGymDetails(gymId: Long, model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showWorkoutDetails(workoutId: Long, classOfScheduleId: Long, scheduleId: Long, model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ subscribeToGym(request: HttpServletRequest, authentication: Authentication, gymId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ typeOfWorkouts(model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateFitnessProgram(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ viewGymDetails(id: Long, model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ viewGymDetailsInstructor(authentication: Authentication, id: Long, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ viewGymInstructorDetails(model: Model, gym: Gym, instructorId: Long, gymId: Long): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GymRating1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GymRating</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   athlete: Athletes [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym: Gym [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gym_rating_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rating: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GymService823322234[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GymService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   athleteRepository: AthleteRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gymRepository: GymRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructors: Set&lt;Instructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   membershipRepository: MembershipRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   programs: Collection&lt;Schedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   roomRepository: RoomRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scheduleRepository: ScheduleRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   workouts: List&lt;Workout&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: Instructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMembershipToGym(gymId: Long, membership: MembershipType)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoomToGym(gym: Gym, room: Room)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWorkout(workout: Workout)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkIfAlreadyMember(gymId: Long, email: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkIfHasSpecificMembership(gymId: Long, email: String, alreadyMember: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExistingMembership(gymId: Long, athleteId: Long): MembershipType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findMembers(id: Long): Set&lt;Athletes&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGymByEmail(email: String): Gym</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGymById(id: Long): Gym</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGymsByCity(city: String): List&lt;Gym&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomById(id: Long): Room</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomByName(name: String, gymId: Long): Room</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveGym(gym: Gym)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveProgram(program: Schedule)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveUpdatedGym(gym: Gym)</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchGyms(name: String, address: String, workoutType: String, bestRating: Integer, city: String): List&lt;Gym&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Instructor1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Instructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   City: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gyms: Set&lt;Gym&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructorClass: Set&lt;ClassOfSchedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructor_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructor_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructor_surname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phoneNumber: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorService: InstructorService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getGymsThatIWork(authentication: Authentication, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ instructorPage(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorService823322234[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classes: Set&lt;ClassOfSchedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorRepository: InstructorRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;Instructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getByEmail(email: String): Instructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getById(id: Long): Instructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getByName(instructor: String): Instructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassesByGym(instructorId: Long, gymId: Long): List&lt;ClassOfSchedule&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(email: String): Instructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveClass(c: ClassOfSchedule)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveInstructors(instructor: Instructor)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Membership1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Membership</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   athlete: Athletes [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   endDate: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membershipId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membershipType: MembershipType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startDate: LocalDate [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MembershipController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MembershipController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   gymService: GymService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   membershipTypeService: MembershipService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createMembershipType(model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createMembershipTypeP(model: Model, membershipType: MembershipType, bindingResult: BindingResult, gymId: Long): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MembershipType1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MembershipType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   gym: Gym [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membership_amount: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membership_period: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membership_type_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   membership_type_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   remainingLessons: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Room1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Room</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   gym: Gym [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Schedule1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Schedule</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ScheduleClasses: List&lt;ClassOfSchedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gyms: Collection&lt;Gym&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schedule_id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   work_out_date: Date [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScheduleController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScheduleController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   athleteService: AthleteService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   classOfScheduleService: ClassOfScheduleService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   emailService: EmailService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gymService: GymService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorService: InstructorService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scheduleService: ScheduleService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   workoutService: WorkoutService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClass(request: HttpServletRequest, session: HttpSession, programId: Long, model: Model, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParticipant(classOfScheduleId: Long, selectedAthleteIds: List&lt;Long&gt;, gymId: Long, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelClassOccurrence(classOccurrenceId: Long, scheduleId: Long, classId: Long, request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelPosition(classOfScheduleId: Long, authentication: Authentication, model: Model, request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createProgram(model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteSelectedClasses(programId: Long, selectedClassIds: List&lt;Long&gt;, request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassScheduleDetails(classOfScheduleId: Long, model: Model, authentication: Authentication, gymId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProgram(model: Model, schedule: Schedule, authentication: Authentication, bindingResult: BindingResult, startDate: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getupgradeClass(workout: Workout, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ joinWaitingList(classOfScheduleId: Long, authentication: Authentication, model: Model, request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyClass(classId: Long, model: Model, authentication: Authentication, gymId: Long, roomError: String, instructorError: String, scheduleId: Long, session: HttpSession): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ participateteInClass(classOfScheduleId: Long, authentication: Authentication, request: HttpServletRequest, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ performModification(classId: Long, timeStart: Time, timeEnd: Time, workoutId: Long, instructorId: Long, roomId: Long, scheduleId: Long, gymId: Long, canceled: boolean, model: Model, request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeParticipant(gymId: Long, classOfScheduleId: Long, removedParticipantIds: List&lt;Long&gt;, authentication: Authentication): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showDeleteClassPage(programId: Long, model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ uncancelClassOccurrence(classId: Long, scheduleId: Long, classOccurrenceId: Long, request: HttpServletRequest): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScheduleService823322234[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScheduleService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classes: List&lt;ClassOfSchedule&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scheduleRepository: ScheduleRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getScheduleById(id: Long): Schedule</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInstructorOccupied(selectedInstructor: Instructor, valueOf: Time, valueOf2: Time, schedule: Schedule): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInstructorOccupiedInClasses(selectedInstructor: Instructor, valueOf: Time, valueOf2: Time): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRoomOccupied(selectedRoom: Room, valueOf: Time, valueOf2: Time, schedule: Schedule): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRoomOccupiedInClasses(selectedRoom: Room, valueOf: Time, valueOf2: Time): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveClass(class1: ClassOfSchedule)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSchedule(program: Schedule)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveUpdatedSchedule(schedule: Schedule)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitingListEntry1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitingListEntry</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   athlete: Athletes [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classOfSchedule: ClassOfSchedule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   joinedAt: LocalDateTime [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Workout1945776582[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Workout</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gyms: Set&lt;Gym&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   workoutId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WorkoutController967126229[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WorkoutController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   gymService: GymService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   workoutService: WorkoutService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createClass(model: Model): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassWorkout(authentication: Authentication, model: Model, workout: Workout, bindingResult: BindingResult): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AthelteController967126229 -> GymService823322234[label="gymService
[1]"];
Athletes1945776582 -> ClassOfSchedule1945776582[label="classes
[0..*]"];
Athletes1945776582 -> Gym1945776582[label="gyms
[0..*]"];
AuthController967126229 -> GymService823322234[label="gymService
[1]"];
AuthController967126229 -> InstructorService823322234[label="instructorService
[1]"];
ClassOccurrence1945776582 -> ClassOfSchedule1945776582[label="classOfSchedule
[0..1]"];
ClassOccurrence1945776582 -> Schedule1945776582[label="schedule
[0..1]"];
ClassOfSchedule1945776582 -> Athletes1945776582[label="participants
[0..*]"];
ClassOfSchedule1945776582 -> Instructor1945776582[label="instructor
[0..1]"];
ClassOfSchedule1945776582 -> Room1945776582[label="room
[0..1]"];
ClassOfSchedule1945776582 -> Schedule1945776582[label="schedules
[0..*]"];
ClassOfSchedule1945776582 -> Workout1945776582[label="workout
[0..1]"];
ClassRating1945776582 -> Athletes1945776582[label="athlete
[0..1]"];
ClassRating1945776582 -> ClassOfSchedule1945776582[label="classOfSchedule
[0..1]"];
ClassRating1945776582 -> Gym1945776582[label="gym
[0..1]"];
ClassRating1945776582 -> Instructor1945776582[label="instructor
[0..1]"];
Gym1945776582 -> Athletes1945776582[label="gymMembers
[0..*]"];
Gym1945776582 -> GymRating1945776582[label="ratingss
[0..*]"];
Gym1945776582 -> Instructor1945776582[label="gymInstructors
[0..*]"];
Gym1945776582 -> MembershipType1945776582[label="gymMemberships
[0..*]"];
Gym1945776582 -> Room1945776582[label="rooms
[0..*]"];
Gym1945776582 -> Schedule1945776582[label="gymSchedules
[0..*]"];
Gym1945776582 -> Workout1945776582[label="gymWorkouts
[0..*]"];
GymController967126229 -> GymService823322234[label="gymService
[1]"];
GymController967126229 -> InstructorService823322234[label="instructorService
[1]"];
GymController967126229 -> ScheduleService823322234[label="scheduleService
[1]"];
GymRating1945776582 -> Athletes1945776582[label="athlete
[0..1]"];
GymRating1945776582 -> Gym1945776582[label="gym
[0..1]"];
GymService823322234 -> Instructor1945776582[label="instructors
[0..*]"];
GymService823322234 -> Schedule1945776582[label="programs
[0..*]"];
GymService823322234 -> Workout1945776582[label="workouts
[0..*]"];
Instructor1945776582 -> ClassOfSchedule1945776582[label="instructorClass
[0..*]"];
Instructor1945776582 -> Gym1945776582[label="gyms
[0..*]"];
InstructorController967126229 -> InstructorService823322234[label="instructorService
[1]"];
InstructorService823322234 -> ClassOfSchedule1945776582[label="classes
[0..*]"];
Membership1945776582 -> Athletes1945776582[label="athlete
[0..1]"];
Membership1945776582 -> MembershipType1945776582[label="membershipType
[0..1]"];
MembershipController967126229 -> GymService823322234[label="gymService
[1]"];
MembershipType1945776582 -> Gym1945776582[label="gym
[0..1]"];
Room1945776582 -> Gym1945776582[label="gym
[0..1]"];
Schedule1945776582 -> ClassOfSchedule1945776582[label="ScheduleClasses
[0..*]"];
Schedule1945776582 -> Gym1945776582[label="gyms
[0..*]"];
ScheduleController967126229 -> GymService823322234[label="gymService
[1]"];
ScheduleController967126229 -> InstructorService823322234[label="instructorService
[1]"];
ScheduleController967126229 -> ScheduleService823322234[label="scheduleService
[1]"];
ScheduleService823322234 -> ClassOfSchedule1945776582[label="classes
[0..*]"];
WaitingListEntry1945776582 -> Athletes1945776582[label="athlete
[0..1]"];
WaitingListEntry1945776582 -> ClassOfSchedule1945776582[label="classOfSchedule
[0..1]"];
Workout1945776582 -> Gym1945776582[label="gyms
[0..*]"];
WorkoutController967126229 -> GymService823322234[label="gymService
[1]"];
    
}
@enduml